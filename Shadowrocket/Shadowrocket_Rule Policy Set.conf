# 懒人配置（含策略组）
# 更新时间：2025-03-02
# 本配置文件现由非原作者维护，基于【懒人配置.conf 2025-02-26 22:31:11】版本维护，仅修改 IPv6 功能开关
# Shadowrocket添加配置方法：配置 - 右上角➕ - 粘贴配置链接 - 下载 - 点击对应的配置文件 - 使用配置。

# Shadowrocket: 2025-02-26 22:31:11
[General]
# Shadowrocket 快速使用方法：
# 1、首页 > 添加节点。
# 2、设置 > 延迟测试方法，选择 CONNECT。
# 3、首页 > 连通性测试，选择可用节点连接。
# 首次启动会提示【安装 VPN 配置文件】，请点击【好】和【允许】才能正常使用。

# 添加/更新节点订阅失败时，可尝试以下方法：
# 1、首页选择一个可用节点，首页 > 全局路由 > 代理，再添加/更新节点订阅。
# 2、切换网络连接（如关闭 VPN、蜂窝数据改 Wi-Fi、Wi-Fi 改蜂窝数据），再添加/更新节点订阅。
# 3、检查节点订阅是否错误或失效，重新获取正确有效的订阅地址。

# Shadowrocket 打开 HTTPS 解密方法：
# 1、点击“配置文件”后面 ⓘ > HTTPS 解密 > 证书 > 生成新的 CA 证书 > 安装证书。
# 2、系统设置 > 已下载描述文件 > 安装。
# 3、系统设置 > 通用 > 关于本机 > 证书信任设置 > 开启对应 Shadowrocket 证书信任。
# “配置文件”是指（配置 > 本地文件）中正在使用的带✔️标记的配置。多设备同步时，如果配置文件已经包含证书密钥内容，建议直接安装现有证书，而不要重新生成新的 CA 证书。

# 旁路系统。如果禁用此选项，可能会导致一些系统问题，如推送通知延迟。
bypass-system = true

# 跳过代理。此选项强制这些域名或 IP 的连接范围由 Shadowrocket TUN 接口来处理，而不是 Shadowrocket 代理服务器。此选项用于解决一些应用程序的一些兼容性问题。
skip-proxy = 192.168.0.0/16,10.0.0.0/8,172.16.0.0/12,localhost,*.local,captive.apple.com,*.ccb.com,*.abchina.com.cn,*.psbc.com,www.baidu.com

# TUN 旁路路由。Shadowrocket TUN 接口只能处理 TCP 协议。使用此选项可以绕过指定的 IP 范围，让其他协议通过。
tun-excluded-routes = 10.0.0.0/8, 100.64.0.0/10, 127.0.0.0/8, 169.254.0.0/16, 172.16.0.0/12, 192.0.0.0/24, 192.0.2.0/24, 192.88.99.0/24, 192.168.0.0/16, 198.51.100.0/24, 203.0.113.0/24, 224.0.0.0/4, 255.255.255.255/32, 239.255.255.250/32

# DNS 覆写。使用普通 DNS 或加密 DNS（如 DoH、DoQ、DoT 等）覆盖默认的系统 DNS。填 system 表示使用系统 DNS。

# 普通 DNS 示例：
# dns-server = 223.5.5.5,119.29.29.29

# 加密 DNS 示例：
# 1、DNS-over-HTTPS（DoH）
# dns-server = https://dns.alidns.com/dns-query
# 2、DNS-over-HTTP/3（DoH3）
# dns-server = h3://dns.alidns.com/dns-query
# 3、DNS-over-QUIC（DoQ）
# dns-server = quic://223.5.5.5
# 4、DNS-over-TLS（DoT）
# dns-server = tls://223.5.5.5

# 通过代理转发 DNS 查询请求（dns over proxy）。示例：
# dns-server = https://dns.google/dns-query#proxy=server1
# dns-server = https://dns.google/dns-query#ecs=120.76.0.0/14|2620:149:af0::10/56&ecs-override=true
# dns-server = https://dns.google/dns-query#proxy=name&ecs=1.1.0.0/14|2620:149:af0::10/56&ecs-override=true
# 参数说明：
# 1、proxy=name。指定代理服务器，名称需要 URL 编码。
# 2、ecs=子网范围。ecs 参数用于设置 EDNS Client Subnet (ECS)，向 DNS 服务器传递客户端的子网信息。ECS 允许 DNS 服务器根据指定的子网范围（而非实际客户端 IP）来返回最优结果。
# 3、ecs-override=true。ecs 参数的强制覆盖。即使客户端的实际 IP 提供了不同的地理位置，查询会强制使用 ecs 指定的子网范围。

dns-server = https://doh.pub/dns-query,https://dns.alidns.com/dns-query,223.5.5.5,119.29.29.29

# 备用 DNS。当覆写 DNS 查询失败或查询时间超过 2 秒，Shadowrocket 会自动回退备用 DNS。如需指定多个 DNS，可用逗号分隔。system 表示回退到系统 DNS。
fallback-dns-server = system

# 启用 IPv6 支持。false 表示不启用，true 表示启用。启用会同时查询 A 记录和 AAAA 记录，优先使用 IPv4 地址解析。
ipv6 = false

# 首选 IPv6。优先向 IPv6 的 DNS 服务器查询 AAAA 记录，优先使用 IPv6 地址解析。false 表示不启用。
prefer-ipv6 = false

# 直连的域名类规则使用系统 DNS 进行查询。false 表示不启用。
dns-direct-system = false

# ping 数据包自动回复。
icmp-auto-reply = true

# 不开启时，「重写的 REJECT 策略」默认只有在配置模式下生效。开启后，可以令该策略在其他全局路由模式下都生效。
always-reject-url-rewrite = false

# 私有 IP 应答。如果不启用此选项，域名解析返回私有 IP，Shadowrocket 会认为该域名被劫持而强制使用代理。
private-ip-answer = true

# 直连域名解析失败后使用代理。false 表示不启用。
dns-direct-fallback-proxy = true

# TUN 包含路由。默认情况下，Shadowrocket 接口会声明自己为默认路由，但由于 Wi-Fi 接口的路由较小，有些流量可能不会通过 Shadowrocket 接口。使用此选项可以添加一个较小的路由表。
# tun-included-routes =

# 总是真实 IP。此选项要求 Shadowrocket 在 TUN 处理 DNS 请求时返回一个真实的 IP 地址而不是假的 IP 地址。
# always-real-ip =

# DNS 劫持。有些设备或软件总是使用硬编码的 DNS 服务器，例如 Netflix 通过 Google DNS(8.8.8.8或8.8.4.4)发送请求，您可以使用此选项来劫持查询。
hijack-dns = 8.8.8.8:53,8.8.4.4:53

# 当 UDP 流量匹配到规则里不支持 UDP 转发的节点策略时重新选择回退行为，可选行为包括 DIRECT、REJECT。DIRECT 表示直连转发 UDP 流量，REJECT 表示拒绝转发 UDP 流量。
udp-policy-not-supported-behaviour = REJECT

# 包含配置。如“include=a.conf”表示当前配置包含另一个配置 a.conf 的内容，当前配置的优先级高于 a.conf。此选项是对配置建立包含关系，以满足同时使用多个配置的需求。
# include =

# 此选项允许返回一个虚假的 IP 地址，如“stun-response-ip=1.1.1.1”、“stun-response-ipv6=::1”，目的是防止真实 IP 地址泄漏，提高 WebRTC 的隐私和安全性。
# stun-response-ip =
# stun-response-ipv6 =

# 网络兼容模式。当参数的值设定为 3 时的效果等同于：设置 > 代理 > 代理类型 > None。
# compatibility-mode =

# 强制所有域名使用本地 DNS 解析。设置为 true 表示启用（此参数为隐藏属性，建议谨慎设置，可能导致相关域名的 CDN 失效）。
# always-ip-address =

[Proxy]
# 添加本地节点。该项目的节点解析是为了兼容部分配置文件，不能当作Shadowrocket添加节点的优先选择。

# Shadowsocks类型：
# 节点名称=ss,地址,端口,password=密码,其他参数(如method=aes-256-cfb,obfs=websocket,plugin=none)

# Vmess类型：
# 节点名称=vmess,地址,端口,password=密码,其他参数(如alterId=0,method=auto,obfs=websocket,tfo=1)

# VLESS类型：
# 节点名称=vless,地址,端口,password=密码,tls=true,其他参数(如obfs=websocket,peer=example.com)

# HTTP/HTTPS/Socks5/Socks5 Over TLS等类型：
# 节点名称=http,地址,端口,用户,密码
# 节点名称=https,地址,端口,用户,密码
# 节点名称=socks5,地址,端口,用户,密码
# 节点名称=socks5-tls,地址,端口,用户,密码,skip-common-name-verify=true

# Trojan类型：
# 节点名称=trojan,地址,端口,password=密码,其他参数(如allowInsecure=1,peer=example.com)

# Hysteria类型：
# 节点名称=hysteria,地址,端口,auth=密码,obfsParam=混淆,protocol=协议,udp=1,其他参数(如peer=example.com,alpn=h2,upmbps=100,downmbps=100)

# Hysteria2类型：
# 节点名称=hysteria2,地址,端口,auth=密码,obfsParam=混淆,udp=1,其他参数(如peer=example.com,alpn=h3)

# TUIC类型：
# 节点名称=tuic,地址,端口,password=密码,udp=1,其他参数(如user=uuid值,peer=example.com,alpn=h2)

# Juicity类型：
# 节点名称=juicity,地址,端口,password=密码,udp=1,其他参数(如user=uuid值,peer=example.com,alpn=h2)

# WireGuard类型：
# 节点名称=wireguard,地址,端口,privateKey=私钥,publicKey=公钥,ip=子网IP,udp=1,其他参数(如dns=1.1.1.1,mtu=1350,keepalive=40,reserved=1/2/3)

# Snell类型：
# 节点名称=snell,地址,端口,password=密码,udp=1,其他参数(如obfs=http,obfs-host=example.com,obfs-uri=/abc)

[Proxy Group]
# 代理分组类型：
# select:手动切换节点。
# url-test:自动切换延迟最低节点。
# fallback:节点挂掉时自动切换其他可用节点。
# load-balance:不同规则的请求使用分组里的不同节点进行连接。
# random:随机使用分组里的不同节点进行连接。

# policy-regex-filter表示正则式或关键词筛选，常用写法：
# 1、保留节点名称含有关键词A和B的节点:
# (?=.*(A))^(?=.*(B))^.*$
# 2、保留节点名称含有关键词A或B的节点:
# A|B
# 3、排除节点名称含有关键词A或B的节点:
# ^((?!(A|B)).)*$
# 4、保留节点名称含有关键词A并排除含有关键词B的节点:
# (?=.*(A))^((?!(B)).)*$

# 代理分组其他设置参数：
# interval:指定间隔多长时间后需要重新发起测试。
# timeout:如果测试在超时前未完成，放弃测试。
# tolerance:只有当新优胜者的分数高于旧优胜者的分数加上公差时，才会进行线路更换。
# url:指定要测试的URL。

# 不含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),策略(如direct,proxy,订阅名称,代理分组,节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 含正则筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),policy-regex-filter=正则式或关键词筛选,interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

# 开启订阅筛选的代理分组，示例：
# 名称 = 类型(如select,url-test,fallback,load-balance,random),订阅名称(多个订阅时,用逗号分隔),use=true,policy-regex-filter=正则式或关键词筛选(省略该参数时,表示匹配对应订阅的全部节点),interval=测试周期,timeout=超时时间,tolerance=公差,policy-select-name=指定选择的节点备注名称,select=默认策略(0表示第一个策略,1表示第二个策略,2表示第三个策略……),url=测试地址

🚀 节点选择 = select,🇭🇰 香港故转,🇹🇼 台湾故转,🇺🇲 美国故转,🇯🇵 日本故转,🇸🇬 新坡故转,🇭🇰 香港自动,🇹🇼 台湾自动,🇺🇲 美国自动,🇯🇵 日本自动,🇸🇬 新坡自动,🇭🇰 香港节点,🇹🇼 台湾节点,🇺🇲 美国节点,🇯🇵 日本节点,🇸🇬 新坡节点,⚖️ 台湾均衡,🌐 其他地区,♻️ 自动选择,🐸 手动切换,🎯 全球直连,🛑 全球拦截
🐟 漏网之鱼 = select,🎯 全球直连,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🍎 Apple = select,🎯 全球直连,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
💰 PayPal = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
👨🏿‍💻 GitHub = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
📲 Telegram = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
👽 Twitter = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🤓 Facebook = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
📷 Instagram = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🤖 AI = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
📹 YouTube = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
📢 FCM = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🍀 Google = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
💧 Copilot = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🐬 OneDrive = select,🎯 全球直连,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🪟 Microsoft = select,🎯 全球直连,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
♻️ Speedtest = select,🎯 全球直连,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🎹 Spotify = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🎠 Amazon = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🎵 TikTok = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🎥 Netflix = select,🚀 节点选择,🎥 奈飞节点,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🧸 Disney+ = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🧜‍♀️ HBO = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🌍 国外媒体 = select,🚀 节点选择,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🎞️ 国内媒体 = select,🎯 全球直连,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🍃 应用净化 = select,🛑 全球拦截,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🛡️ 隐私防护 = select,🛑 全球拦截,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
♻️ 自动选择 = url-test,url=http://www.gstatic.com/generate_204,interval=86400,tolerance=0,timeout=5,select=0,policy-regex-filter=^((?!(距离|节点|超时|官网|剩余|套餐|最新|机场|故障|流量|到期|收藏|过期)).)*$
🐸 手动切换 = select,policy-regex-filter=^((?!(距离|节点|超时|官网|剩余|套餐|最新|机场|故障|流量|到期|收藏|过期)).)*$
🌐 其他地区 = select,select=0,policy-regex-filter=^((?!(🇭🇰|🇹🇼|🇺🇲|🇸🇬|🇯🇵|Hong Kong|HongKong|HK|Taiwan|TW|Japan|JP|Singapore|SG|USA|US|United States|香港|台湾|日本|新加坡|美国|距离|节点|超时|官网|剩余|套餐|最新|机场|故障|流量|到期|收藏|过期)).)*$
🇭🇰 香港节点 = url-test,policy-regex-filter=(?=.*(🇭🇰|香港|Hong Kong|HongKong|HK))^.*$
🇹🇼 台湾节点 = url-test,policy-regex-filter=(?=.*(🇹🇼|台湾|Taiwan|TW))^.*$
🇺🇲 美国节点 = url-test,policy-regex-filter=(?=.*(🇺🇸|美国|USA|US|United States))^.*$
🇯🇵 日本节点 = url-test,policy-regex-filter=(?=.*(🇯🇵|日本|JP|Japan))^.*$
🇸🇬 新坡节点 = url-test,policy-regex-filter=(?=.*(🇸🇬|新加坡|SG|Singapore).)^((?!(距离|节点|超时|官网|剩余|套餐|最新|机场|故障|流量|到期|收藏|过期)).)*$
🇭🇰 香港自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=(?=.*(🇭🇰|香港|Hong Kong|HongKong|HK))^.*$
🇹🇼 台湾自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=(?=.*(🇹🇼|台湾|Taiwan|TW))^.*$
🇺🇲 美国自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=(?=.*(🇺🇸|美国|USA|US|United States))^.*$
🇯🇵 日本自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=(?=.*(🇯🇵|日本|JP|Japan))^.*$
🇸🇬 新坡自动 = url-test,url=http://www.gstatic.com/generate_204,interval=600,tolerance=0,timeout=5,select=0,policy-regex-filter=(?=.*(🇸🇬|新加坡|SG|Singapore).)^((?!(距离|节点|超时|官网|剩余|套餐|最新|机场|故障|流量|到期|收藏|过期)).)*$
🇭🇰 香港故转 = fallback,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇭🇰|香港|Hong Kong|HongKong|HK))^.*$
🇹🇼 台湾故转 = fallback,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇹🇼|台湾|Taiwan|TW))^.*$
🇺🇲 美国故转 = fallback,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇺🇸|美国|USA|US|United States))^.*$
🇯🇵 日本故转 = fallback,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇯🇵|日本|JP|Japan))^.*$
🇸🇬 新坡故转 = fallback,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇸🇬|新加坡|SG|Singapore))^.*$
⚖️ 台湾均衡 = load-balance,interval=600,timeout=5,select=0,url=http://www.gstatic.com/generate_204,policy-regex-filter=(?=.*(🇹🇼|台湾|Taiwan|TW))^.*$
🎥 奈飞节点 = select,policy-regex-filter=(?=.*(NF|奈飞|解锁|Netflix|NETFLIX|Media))^.*$
🎯 全球直连 = select,DIRECT,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204
🛑 全球拦截 = select,REJECT,interval=86400,timeout=5,select=0,url=http://www.gstatic.com/generate_204

[Rule]
# 规则类型：
# DOMAIN-SUFFIX：匹配请求域名的后缀。如“DOMAIN-SUFFIX,example.com,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN-KEYWORD：匹配请求域名的关键词。如“DOMAIN-KEYWORD,exa,DIRECT”可以匹配到“a.example.com、a.b.example.com”。
# DOMAIN：匹配请求的完整域名。如“DOMAIN,www.example.com,DIRECT”只能匹配到“www.example.com”。
# （当为DOMAIN、DOMAIN-SUFFIX和DOMAIN-KEYWORD类型分别设置相同的值时，只有其中一种类型会生效。）
# USER-AGENT：匹配用户代理字符串，支持使用通配符“*”。如“USER-AGENT,MicroMessenger*,DIRECT”可以匹配到“MicroMessenger Client”。
# URL-REGEX：匹配URL正则式。如“URL-REGEX,^https?://.+/item.+,REJECT”可以匹配到“https://www.example.com/item/abc/123”。
# IP-CIDR：匹配IPv4或IPv6地址。如“IP-CIDR,192.168.1.0/24,DIRECT”可以匹配到IP段“192.168.1.1～192.168.1.254”。当域名请求遇到IP类规则时，Shadowrocket会向本地 DNS 服务器发送查询请求，以判断主机IP是否匹配规则。若IP类规则加“no-resolve”(如：IP-CIDR,172.16.0.0/12,DIRECT,no-resolve)，则域名请求将会跳过此规则，不会触发本地 DNS 查询。
# IP-ASN：匹配IP地址隶属的ASN编号。如"IP-ASN,56040,DIRECT"可以匹配到属于China Mobile Communications Corporation网络的IP地址。
# RULE-SET：匹配规则集内容。规则集的内容需包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list"。（兼容仅包含IP地址且不带规则类型的规则集）
# DOMAIN-SET：匹配域名集内容。域名集的内容不包含规则类型，如"https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple_Domain.list"。
# SCRIPT：匹配脚本名称。（创建rule类型脚本，再添加script类型的规则。）
# DST-PORT：匹配目标主机名的端口号。如“DST-PORT,443,DIRECT”可以匹配到443目标端口。
# GEOIP：匹配IP数据库。如“GEOIP,CN,DIRECT”可以匹配到归属地为CN的IP地址。
# FINAL：兜底策略。如“FINAL,PROXY”表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
# AND：逻辑规则，与规则。如“AND,((DOMAIN,www.example.com),(DST-PORT,123)),DIRECT”可以匹配到“www.example.com:123”。
# NOT：逻辑规则，非规则。如“NOT,((DST-PORT,123)),DIRECT”可以匹配到除了“123”端口的其他所有请求。
# OR：逻辑规则，或规则。如“OR,((DST-PORT,123),(DST-PORT,456)),DIRECT”可以匹配到“123”或“456”端口的所有请求。

# 规则策略：
# PROXY：代理。通过代理服务器转发流量。
# DIRECT：直连。连接不经过任何代理服务器。
# REJECT：拒绝。返回HTTP状态码404，没有内容。
# REJECT-DICT：拒绝。返回HTTP状态码200，内容为空的JSON对象。
# REJECT-ARRAY：拒绝。返回HTTP状态码200，内容为空的JSON数组。
# REJECT-200：拒绝。返回HTTP状态码200，没有内容。
# REJECT-IMG：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-TINYGIF：拒绝。返回HTTP状态码200，内容为1像素GIF。
# REJECT-DROP：拒绝。丢弃IP包。
# REJECT-NO-DROP：拒绝。返回ICMP端口不可达。
# 除此之外，规则策略还可以选择「代理分组」、「订阅名称」、「分组」、「节点」。

# 规则匹配的优先级：
# 1.模块规则优先于配置文件规则。
# 2.规则从上到下依次匹配。
# 3.域名规则优先于IP规则。

# 关于屏蔽443端口的UDP流量的解释内容：HTTP3/QUIC协议开始流行，但是国内ISP和国际出口的UDP优先级都很低，表现很差，屏蔽掉以强制回退HTTP2/HTTP1.1。（如需启用该逻辑规则，请删除AND前面的注释符号#）
# AND,((PROTOCOL,UDP),(DST-PORT,443)),REJECT-NO-DROP

# 国外常用服务单独分流：YouTube，Netflix，Disney+，Max（HBO），Spotify，Telegram，PayPal，Twitter，Facebook，Google，TikTok，GitHub，AI（ChatGPT、Gemini、Claude、Grok）。
# 国内常用服务单独分流：苹果服务，微软服务，哔哩哔哩，网易云音乐，游戏平台，亚马逊，百度，豆瓣，微信，抖音，新浪，知乎，小红书。
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Apple/Apple.list, 🍎 Apple
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/PayPal/PayPal.list, 💰 PayPal
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GitHub/GitHub.list, 👨🏿‍💻 GitHub
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Telegram/Telegram.list, 📲 Telegram
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Twitter/Twitter.list, 👽 Twitter
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Facebook/Facebook.list, 🤓 Facebook
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Instagram/Instagram.list, 📷 Instagram
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OpenAI/OpenAI.list, 🤖 AI
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Wikimedia/Wikimedia.list, 🚀 节点选择
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/YouTube/YouTube.list, 📹 YouTube
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GoogleFCM/GoogleFCM.list, 📢 FCM
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Google/Google.list, 🍀 Google
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Copilot/Copilot.list, 💧 Copilot
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/OneDrive/OneDrive.list, 🐬 OneDrive
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Microsoft/Microsoft.list, 🪟 Microsoft
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Speedtest/Speedtest.list, ♻️ Speedtest
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Spotify/Spotify.list, 🎹 Spotify
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Amazon/Amazon.list, 🎠 Amazon
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/TikTok/TikTok.list, 🎵 TikTok
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Netflix/Netflix.list, 🎥 Netflix
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Disney/Disney.list, 🧸 Disney+
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/HBO/HBO.list, 🧜‍♀️ HBO
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/GlobalMedia/GlobalMedia.list, 🌍 国外媒体
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaMedia/ChinaMedia.list, 🎞️ 国内媒体
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/Global/Global.list, 🚀 节点选择
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/TchouJC/Tchou/refs/heads/main/Mihomo/Rule%20Set/Tchou_Proxy_classical.list, 🚀 节点选择
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/TchouJC/Tchou/refs/heads/main/Mihomo/Rule%20Set/Tchou_Direct_classical.list, 🎯 全球直连
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/China/China.list, 🎯 全球直连
RULE-SET,https://ghfast.top/https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Shadowrocket/ChinaIPs/ChinaIPs.list, 🎯 全球直连

# 表示CN地区的IP分流走直连，GEOIP数据库用来判断IP是否属于CN地区。默认使用Shadowrocket自带的GEOIP数据库，如果您想替换其他数据库，可在 设置 - GeoLite2数据库 里添加和修改。
GEOIP,CN,DIRECT
# 表示当其他所有规则都匹配不到时才使用FINAL规则的策略。
FINAL,🐟 漏网之鱼

[Host]
# 域名指定本地值：
# example.com = 1.2.3.4

# 域名指定 DNS 服务器：
# example.com = server:1.2.3.4

# wifi名称指定 DNS 服务器，如需指定多个 DNS，可用逗号分隔：
# ssid:wifi名称 = server:1.2.3.4

*.apple.com = server:system
*.icloud.com = server:system
localhost = 127.0.0.1

[URL Rewrite]
# Google搜索引擎防跳转的重写。
^https?://(www.)?g.cn https://www.google.com 302
^https?://(www.)?google.cn https://www.google.com 302

[MITM]
# Shadowrocket仅会解密hostname指定的域名的请求，可以使用通配符。也可以使用前缀 - 排除特定主机名，如 -*.example.com。iOS系统和某些应用有严格的安全策略，仅信任某些特定的证书，对这些域名启动解密可能导致问题，如 *.apple.com，*.icloud.com。

hostname = *.google.cn